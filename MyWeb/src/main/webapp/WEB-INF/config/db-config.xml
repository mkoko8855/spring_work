<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	
	<!-- 여기는 JDBC, DB 관련 빈을 등록하고 관리하는 설정 파일 이다. -->
	
	
	<!-- 
		프로젝트를 구성하다보면 자주 변경되지 않는 설정 파일들이나 공통 정보들에 대한 내용이
		존재하게 되고 그 내용들은 한번 지정되면 잘 바뀌지 않는다.
		또한 외부로 노출되었을 시 심각한 문제가 발생할 수도 있는 (계정 정보 등) 자료들은
		.properties 라는 파일을 사용하여 텍스트 형식으로 간단히 지정하고
		필요할 때 불러와서 사용하는 방식을 많이 사용한다.
		(.properties 파일은 git ignore에 추가하여 외부로 공개되지 않게 한다.)
	 -->
	
	
	
	
	<!-- 외부에 따로 설정한 설정 파일을 참조하는 곳에 사용하는 클래스 -->
	<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="location" value="classpath:/properties/Hikari.properties"/>
	</bean>
	
	
	
	
	
	
	
	
	
	<!--  히카리 커넥션 풀 빈 등록부터 하자 -->
	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	
		<!-- HikariConfig 클래스 내부의 필드값을 초기화 하기 위해 setter 메서드 호출  -->
		<property name="driverClassName" value="${mydb.driverClassName}" />  <!-- 필드명을 쓴다. 필드명을 부르면 세터에 맞게 자동으로 돼서 값을 넣어준다! -->
		<property name="jdbcUrl" value="${mydb.url}"/>  <!-- 파라미터값하나넣는의미에서 ?를 넣음. 이거 안하면 시간대 안맞아서 로그인 안될 수 도 있음.  -->
		<!-- 커넥션풀 제공할 떄 아디 비번도 알려줬었지 -->
		<property name="username" value="${mydb.username}"/>
		<property name="password" value="${mydb.password}"/>
	</bean>
		
		
		
		<!-- 히카리는 데이터소스타입의 객체도 지원한다. -->
		<!-- 히카리 데이터소스 빈 등록(커넥션 풀 정보를 담는 객체 등록) -->
		<bean id="ds" class="com.zaxxer.hikari.HikariDataSource">
			<constructor-arg ref="hikariConfig" /> <!--빈 등록된 객체를 여기에 전달하는거니 ref로.  -->
		</bean>		 <!-- 생성자 매개값으로 히카리를 주입해놨다. -->	
	
	
	
	
		<!-- 마이바티스 sql 동작을 위한 핵심 객체인 SqlSessionFactory 클래스를 빈 등록하자 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="ds" />
			<property name="configLocation" value="classpath:/mybatis-config.xml"/>   <!-- 세터메서드를 불러서 값을 넣어줄것임. -->
			<property name="mapperLocations" value="classpath:/mappers/*Mapper.xml" /> <!-- 인터페이스를 구현하는 클래스가 아닌 xml형식으로 작성하고, 그 위치를 value 에 적어준다 -->
		</bean>		
		
		
		
 		<!-- 
			SqlSessionFactory가 여러분이 지정하신 경로의 xml파일을 클래스로 변환하여
			bean으로 등록하려는 시도를 할 때, 어떤 타입으로 빈 등록을 할 지를 결정해야 하는데,
			이미 xml 파일에는 해당 파일이 어떤 인터페이스를 구현하는 구현체인지는 명시되어 있다.
		 	그 인터페이스가 존재하는 패키지의 경로를 탐색하라는 태그이다.
		 -->
		<mybatis-spring:scan base-package="com.spring.myweb.freeboard.mapper"/> <!-- Namespaces가서 스프링 체크한 후 자동완성 먹음 -->
		<mybatis-spring:scan base-package="com.spring.myweb.user.mapper"/> 
		
	
	
	
	
			
</beans>
