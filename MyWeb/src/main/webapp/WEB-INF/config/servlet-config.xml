<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">



	<!-- 자동으로 컨트롤러와 매핑 메서드를 탐색(핸들러 맵핑, 핸들러어댑터 빈 등록) -->
	<annotation-driven />



	<!-- 비밀번호 암호화 객체 빈 등록 -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	
	
	
	<!-- 외부에 따로 설정한 설정 파일을 참조하는 곳에 사용하는 클래스 -->
	<beans:bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:/properties/email.properties</beans:value>
				<beans:value>classpath:/properties/kakaoAuth.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>






	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
		
	<!-- css, img, js..의 파일 경로가 복잡할 때 사용한다. 왜? jsp파일 같은 데서 경로가 긴 거 일일히 쓰기 귀찮잖아요. 
		그럴 때 선언한다. 그래서 내부 경로를 숨겨주는 역할도 한다. -->
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/img/**" location="/resources/img/" />
	<resources mapping="/fonts/**" location="/resources/fonts/" />
	<!-- 링크를 달 떄, resources안에 css경로를 잡을 때 css만 쓰면 됨 -->



	<!-- 컨트롤러가 리턴한 문자열 앞, 뒤에 적절한 경로를 붙여서 화면을 응답할 수 있도록 도와주는 뷰 리졸버. -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<!-- 
		 아노테이션으로(@Controller, @Service...등) 등록된 클래스 객체들을 탐색해서 빈으로 등록해 주는 설정 태그.
		 base-package에다가는 탐색 할 패키지 경로를 쓰시면 하위 패키지까지 몽땅 검색해 준다.
	 -->
	<context:component-scan
		base-package="com.spring.myweb" />




	<!-- 파일 업로드 -->
	<!-- id를 multipartResolver로 선언. Multipart 형식으로 전달되는 데이터를 스프링 mvc에서 사용할 수 있도록 변환해 주는 객체이다. -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	
		<!-- 최대 업로드 가능한 바이트 크기(바이트 단위로), 만약에 제한 없이 받고 싶다면 -1을 주면 된다.  -->
		<beans:property name="maxUploadSize" value="1048576"/> <!-- 1메가바이트로 제한한다(1048576). 이 이상 넘으면 예외를 발생 시키게 된다. -->

		<!-- 업로드 요청을 변환할 때 사용할 문자 인코딩 방식-->
		<beans:property name="defaultEncoding" value="utf-8"/>

		</beans:bean>

	</beans:beans>
